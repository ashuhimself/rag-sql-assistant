version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: rag-sql-postgres
    environment:
      POSTGRES_DB: banking_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/schemas:/docker-entrypoint-initdb.d
    networks:
      - rag-network

  qdrant:
    image: qdrant/qdrant:latest
    container_name: rag-sql-qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - rag-network

  redis:
    image: redis:7-alpine
    container_name: rag-sql-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rag-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rag-sql-backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/banking_db
      - QDRANT_URL=http://qdrant:6333
      - REDIS_URL=redis://redis:6379
      - OLLAMA_URL=http://host.docker.internal:11434
      - DEBUG=True
      - DB_HOST=postgres
      - DB_PORT=5432
    depends_on:
      - postgres
      - qdrant
      - redis
    volumes:
      - ./backend:/app
    networks:
      - rag-network
    extra_hosts:
      - "host.docker.internal:host-gateway"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rag-sql-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - rag-network

volumes:
  postgres_data:
  qdrant_data:
  redis_data:

networks:
  rag-network:
    driver: bridge