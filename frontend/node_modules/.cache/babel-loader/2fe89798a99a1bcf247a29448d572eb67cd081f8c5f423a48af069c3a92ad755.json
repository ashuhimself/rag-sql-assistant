{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/ashu/Desktop/warehouse-copilot/rag-sql-assistant/frontend/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7,_templateObject8,_templateObject9,_templateObject0,_templateObject1,_templateObject10;import React,{useState,useEffect}from'react';import styled from'styled-components';import{analyticsService}from'../../services/analyticsService';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DashboardContainer=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  background: white;\\n  border-radius: 8px;\\n  padding: 24px;\\n  margin: 16px 0;\\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\\n\"])));const DashboardTitle=styled.h2(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  margin: 0 0 24px 0;\\n  color: #333;\\n  font-size: 24px;\\n  font-weight: 600;\\n  display: flex;\\n  align-items: center;\\n  gap: 12px;\\n\"])));const MetricsGrid=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: grid;\\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\\n  gap: 20px;\\n  margin-bottom: 32px;\\n\"])));const MetricCategory=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  background: #f8f9fa;\\n  border-radius: 8px;\\n  padding: 20px;\\n  border: 1px solid #e9ecef;\\n\"])));const CategoryTitle=styled.h3(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  margin: 0 0 16px 0;\\n  color: #495057;\\n  font-size: 16px;\\n  font-weight: 600;\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n\"])));const MetricItem=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: space-between;\\n  align-items: center;\\n  padding: 8px 0;\\n  border-bottom: 1px solid #dee2e6;\\n\\n  &:last-child {\\n    border-bottom: none;\\n  }\\n\"])));const MetricLabel=styled.span(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  color: #666;\\n  font-size: 14px;\\n\"])));const MetricValue=styled.span(_templateObject8||(_templateObject8=_taggedTemplateLiteral([\"\\n  font-weight: 600;\\n  font-size: 14px;\\n  color: \",\";\\n\"])),props=>props.highlight?'#007bff':'#333');const RefreshButton=styled.button(_templateObject9||(_templateObject9=_taggedTemplateLiteral([\"\\n  background: #007bff;\\n  color: white;\\n  border: none;\\n  border-radius: 4px;\\n  padding: 8px 16px;\\n  font-size: 14px;\\n  cursor: pointer;\\n  display: flex;\\n  align-items: center;\\n  gap: 8px;\\n\\n  &:hover {\\n    background: #0056b3;\\n  }\\n\\n  &:disabled {\\n    background: #6c757d;\\n    cursor: not-allowed;\\n  }\\n\"])));const LoadingSpinner=styled.div(_templateObject0||(_templateObject0=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  padding: 40px;\\n  color: #666;\\n\"])));const ErrorMessage=styled.div(_templateObject1||(_templateObject1=_taggedTemplateLiteral([\"\\n  background: #f8d7da;\\n  color: #721c24;\\n  padding: 12px 16px;\\n  border-radius: 4px;\\n  border: 1px solid #f5c6cb;\\n  margin: 16px 0;\\n\"])));const LastUpdated=styled.div(_templateObject10||(_templateObject10=_taggedTemplateLiteral([\"\\n  color: #666;\\n  font-size: 12px;\\n  text-align: right;\\n  margin-top: 16px;\\n\"])));const BusinessMetricsDashboard=()=>{const[metrics,setMetrics]=useState(null);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);const fetchMetrics=async()=>{try{setLoading(true);setError(null);const response=await analyticsService.getBusinessMetrics();setMetrics(response);}catch(err){setError('Failed to load business metrics');console.error('Error fetching metrics:',err);}finally{setLoading(false);}};useEffect(()=>{fetchMetrics();},[]);const formatCurrency=value=>{return new Intl.NumberFormat('en-US',{style:'currency',currency:'USD',minimumFractionDigits:0,maximumFractionDigits:0}).format(value);};const formatNumber=function(value){let decimals=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0;return new Intl.NumberFormat('en-US',{minimumFractionDigits:decimals,maximumFractionDigits:decimals}).format(value);};const formatPercentage=value=>{return\"\".concat(value.toFixed(1),\"%\");};if(loading){return/*#__PURE__*/_jsx(DashboardContainer,{children:/*#__PURE__*/_jsx(LoadingSpinner,{children:/*#__PURE__*/_jsx(\"div\",{children:\"\\uD83D\\uDD04 Loading business metrics...\"})})});}if(error){return/*#__PURE__*/_jsxs(DashboardContainer,{children:[/*#__PURE__*/_jsx(DashboardTitle,{children:\"\\uD83D\\uDCCA Business Metrics Dashboard\"}),/*#__PURE__*/_jsx(ErrorMessage,{children:error}),/*#__PURE__*/_jsx(RefreshButton,{onClick:fetchMetrics,children:\"\\uD83D\\uDD04 Retry\"})]});}if(!metrics){return null;}return/*#__PURE__*/_jsxs(DashboardContainer,{children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between',alignItems:'center',marginBottom:'24px'},children:[/*#__PURE__*/_jsx(DashboardTitle,{children:\"\\uD83D\\uDCCA Business Metrics Dashboard\"}),/*#__PURE__*/_jsx(RefreshButton,{onClick:fetchMetrics,disabled:loading,children:\"\\uD83D\\uDD04 Refresh\"})]}),/*#__PURE__*/_jsxs(MetricsGrid,{children:[/*#__PURE__*/_jsxs(MetricCategory,{children:[/*#__PURE__*/_jsx(CategoryTitle,{children:\"\\uD83D\\uDC65 Customer Metrics\"}),/*#__PURE__*/_jsxs(MetricItem,{children:[/*#__PURE__*/_jsx(MetricLabel,{children:\"Total Customers\"}),/*#__PURE__*/_jsx(MetricValue,{highlight:true,children:formatNumber(metrics.metrics.customer_metrics.total_customers)})]}),/*#__PURE__*/_jsxs(MetricItem,{children:[/*#__PURE__*/_jsx(MetricLabel,{children:\"Premium Customer Rate\"}),/*#__PURE__*/_jsx(MetricValue,{children:formatPercentage(metrics.metrics.customer_metrics.premium_customer_rate)})]}),/*#__PURE__*/_jsxs(MetricItem,{children:[/*#__PURE__*/_jsx(MetricLabel,{children:\"Avg Credit Score\"}),/*#__PURE__*/_jsx(MetricValue,{children:formatNumber(metrics.metrics.customer_metrics.avg_credit_score)})]}),/*#__PURE__*/_jsxs(MetricItem,{children:[/*#__PURE__*/_jsx(MetricLabel,{children:\"Avg Annual Income\"}),/*#__PURE__*/_jsx(MetricValue,{children:formatCurrency(metrics.metrics.customer_metrics.avg_annual_income)})]})]}),/*#__PURE__*/_jsxs(MetricCategory,{children:[/*#__PURE__*/_jsx(CategoryTitle,{children:\"\\uD83C\\uDFE6 Account Metrics\"}),/*#__PURE__*/_jsxs(MetricItem,{children:[/*#__PURE__*/_jsx(MetricLabel,{children:\"Total Accounts\"}),/*#__PURE__*/_jsx(MetricValue,{highlight:true,children:formatNumber(metrics.metrics.account_metrics.total_accounts)})]}),/*#__PURE__*/_jsxs(MetricItem,{children:[/*#__PURE__*/_jsx(MetricLabel,{children:\"Total Balance\"}),/*#__PURE__*/_jsx(MetricValue,{children:formatCurrency(metrics.metrics.account_metrics.total_balance)})]}),/*#__PURE__*/_jsxs(MetricItem,{children:[/*#__PURE__*/_jsx(MetricLabel,{children:\"Avg Account Balance\"}),/*#__PURE__*/_jsx(MetricValue,{children:formatCurrency(metrics.metrics.account_metrics.avg_account_balance)})]}),/*#__PURE__*/_jsxs(MetricItem,{children:[/*#__PURE__*/_jsx(MetricLabel,{children:\"Negative Balance Rate\"}),/*#__PURE__*/_jsx(MetricValue,{children:formatPercentage(metrics.metrics.account_metrics.negative_balance_rate)})]})]}),/*#__PURE__*/_jsxs(MetricCategory,{children:[/*#__PURE__*/_jsx(CategoryTitle,{children:\"\\uD83D\\uDCB0 Loan Portfolio\"}),/*#__PURE__*/_jsxs(MetricItem,{children:[/*#__PURE__*/_jsx(MetricLabel,{children:\"Total Loans\"}),/*#__PURE__*/_jsx(MetricValue,{highlight:true,children:formatNumber(metrics.metrics.loan_metrics.total_loans)})]}),/*#__PURE__*/_jsxs(MetricItem,{children:[/*#__PURE__*/_jsx(MetricLabel,{children:\"Total Portfolio Value\"}),/*#__PURE__*/_jsx(MetricValue,{children:formatCurrency(metrics.metrics.loan_metrics.total_loan_portfolio)})]}),/*#__PURE__*/_jsxs(MetricItem,{children:[/*#__PURE__*/_jsx(MetricLabel,{children:\"Outstanding Balance\"}),/*#__PURE__*/_jsx(MetricValue,{children:formatCurrency(metrics.metrics.loan_metrics.total_outstanding)})]}),/*#__PURE__*/_jsxs(MetricItem,{children:[/*#__PURE__*/_jsx(MetricLabel,{children:\"Default Rate\"}),/*#__PURE__*/_jsx(MetricValue,{children:formatPercentage(metrics.metrics.loan_metrics.default_rate)})]}),/*#__PURE__*/_jsxs(MetricItem,{children:[/*#__PURE__*/_jsx(MetricLabel,{children:\"Avg Interest Rate\"}),/*#__PURE__*/_jsx(MetricValue,{children:formatPercentage(metrics.metrics.loan_metrics.avg_interest_rate)})]})]}),/*#__PURE__*/_jsxs(MetricCategory,{children:[/*#__PURE__*/_jsx(CategoryTitle,{children:\"\\uD83D\\uDCB3 Transactions (30 days)\"}),/*#__PURE__*/_jsxs(MetricItem,{children:[/*#__PURE__*/_jsx(MetricLabel,{children:\"Monthly Transaction Count\"}),/*#__PURE__*/_jsx(MetricValue,{highlight:true,children:formatNumber(metrics.metrics.transaction_metrics.monthly_transaction_count)})]}),/*#__PURE__*/_jsxs(MetricItem,{children:[/*#__PURE__*/_jsx(MetricLabel,{children:\"Monthly Volume\"}),/*#__PURE__*/_jsx(MetricValue,{children:formatCurrency(metrics.metrics.transaction_metrics.monthly_transaction_volume)})]}),/*#__PURE__*/_jsxs(MetricItem,{children:[/*#__PURE__*/_jsx(MetricLabel,{children:\"Avg Transaction Amount\"}),/*#__PURE__*/_jsx(MetricValue,{children:formatCurrency(metrics.metrics.transaction_metrics.avg_transaction_amount)})]})]})]}),/*#__PURE__*/_jsxs(LastUpdated,{children:[\"Last updated: \",new Date(metrics.calculated_at).toLocaleString()]})]});};export default BusinessMetricsDashboard;","map":{"version":3,"names":["React","useState","useEffect","styled","analyticsService","jsx","_jsx","jsxs","_jsxs","DashboardContainer","div","_templateObject","_taggedTemplateLiteral","DashboardTitle","h2","_templateObject2","MetricsGrid","_templateObject3","MetricCategory","_templateObject4","CategoryTitle","h3","_templateObject5","MetricItem","_templateObject6","MetricLabel","span","_templateObject7","MetricValue","_templateObject8","props","highlight","RefreshButton","button","_templateObject9","LoadingSpinner","_templateObject0","ErrorMessage","_templateObject1","LastUpdated","_templateObject10","BusinessMetricsDashboard","metrics","setMetrics","loading","setLoading","error","setError","fetchMetrics","response","getBusinessMetrics","err","console","formatCurrency","value","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","format","formatNumber","decimals","arguments","length","undefined","formatPercentage","concat","toFixed","children","onClick","display","justifyContent","alignItems","marginBottom","disabled","customer_metrics","total_customers","premium_customer_rate","avg_credit_score","avg_annual_income","account_metrics","total_accounts","total_balance","avg_account_balance","negative_balance_rate","loan_metrics","total_loans","total_loan_portfolio","total_outstanding","default_rate","avg_interest_rate","transaction_metrics","monthly_transaction_count","monthly_transaction_volume","avg_transaction_amount","Date","calculated_at","toLocaleString"],"sources":["/Users/ashu/Desktop/warehouse-copilot/rag-sql-assistant/frontend/src/components/analytics/BusinessMetricsDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { analyticsService, BusinessMetricsResponse } from '../../services/analyticsService';\n\nconst DashboardContainer = styled.div`\n  background: white;\n  border-radius: 8px;\n  padding: 24px;\n  margin: 16px 0;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst DashboardTitle = styled.h2`\n  margin: 0 0 24px 0;\n  color: #333;\n  font-size: 24px;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nconst MetricsGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));\n  gap: 20px;\n  margin-bottom: 32px;\n`;\n\nconst MetricCategory = styled.div`\n  background: #f8f9fa;\n  border-radius: 8px;\n  padding: 20px;\n  border: 1px solid #e9ecef;\n`;\n\nconst CategoryTitle = styled.h3`\n  margin: 0 0 16px 0;\n  color: #495057;\n  font-size: 16px;\n  font-weight: 600;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst MetricItem = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 8px 0;\n  border-bottom: 1px solid #dee2e6;\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst MetricLabel = styled.span`\n  color: #666;\n  font-size: 14px;\n`;\n\nconst MetricValue = styled.span<{ highlight?: boolean }>`\n  font-weight: 600;\n  font-size: 14px;\n  color: ${props => props.highlight ? '#007bff' : '#333'};\n`;\n\nconst RefreshButton = styled.button`\n  background: #007bff;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 8px 16px;\n  font-size: 14px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &:hover {\n    background: #0056b3;\n  }\n\n  &:disabled {\n    background: #6c757d;\n    cursor: not-allowed;\n  }\n`;\n\nconst LoadingSpinner = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 40px;\n  color: #666;\n`;\n\nconst ErrorMessage = styled.div`\n  background: #f8d7da;\n  color: #721c24;\n  padding: 12px 16px;\n  border-radius: 4px;\n  border: 1px solid #f5c6cb;\n  margin: 16px 0;\n`;\n\nconst LastUpdated = styled.div`\n  color: #666;\n  font-size: 12px;\n  text-align: right;\n  margin-top: 16px;\n`;\n\nconst BusinessMetricsDashboard: React.FC = () => {\n  const [metrics, setMetrics] = useState<BusinessMetricsResponse | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  const fetchMetrics = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await analyticsService.getBusinessMetrics();\n      setMetrics(response);\n    } catch (err) {\n      setError('Failed to load business metrics');\n      console.error('Error fetching metrics:', err);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchMetrics();\n  }, []);\n\n  const formatCurrency = (value: number) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 0,\n      maximumFractionDigits: 0,\n    }).format(value);\n  };\n\n  const formatNumber = (value: number, decimals: number = 0) => {\n    return new Intl.NumberFormat('en-US', {\n      minimumFractionDigits: decimals,\n      maximumFractionDigits: decimals,\n    }).format(value);\n  };\n\n  const formatPercentage = (value: number) => {\n    return `${value.toFixed(1)}%`;\n  };\n\n  if (loading) {\n    return (\n      <DashboardContainer>\n        <LoadingSpinner>\n          <div>🔄 Loading business metrics...</div>\n        </LoadingSpinner>\n      </DashboardContainer>\n    );\n  }\n\n  if (error) {\n    return (\n      <DashboardContainer>\n        <DashboardTitle>📊 Business Metrics Dashboard</DashboardTitle>\n        <ErrorMessage>{error}</ErrorMessage>\n        <RefreshButton onClick={fetchMetrics}>\n          🔄 Retry\n        </RefreshButton>\n      </DashboardContainer>\n    );\n  }\n\n  if (!metrics) {\n    return null;\n  }\n\n  return (\n    <DashboardContainer>\n      <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '24px' }}>\n        <DashboardTitle>📊 Business Metrics Dashboard</DashboardTitle>\n        <RefreshButton onClick={fetchMetrics} disabled={loading}>\n          🔄 Refresh\n        </RefreshButton>\n      </div>\n\n      <MetricsGrid>\n        {/* Customer Metrics */}\n        <MetricCategory>\n          <CategoryTitle>👥 Customer Metrics</CategoryTitle>\n          <MetricItem>\n            <MetricLabel>Total Customers</MetricLabel>\n            <MetricValue highlight>\n              {formatNumber(metrics.metrics.customer_metrics.total_customers)}\n            </MetricValue>\n          </MetricItem>\n          <MetricItem>\n            <MetricLabel>Premium Customer Rate</MetricLabel>\n            <MetricValue>\n              {formatPercentage(metrics.metrics.customer_metrics.premium_customer_rate)}\n            </MetricValue>\n          </MetricItem>\n          <MetricItem>\n            <MetricLabel>Avg Credit Score</MetricLabel>\n            <MetricValue>\n              {formatNumber(metrics.metrics.customer_metrics.avg_credit_score)}\n            </MetricValue>\n          </MetricItem>\n          <MetricItem>\n            <MetricLabel>Avg Annual Income</MetricLabel>\n            <MetricValue>\n              {formatCurrency(metrics.metrics.customer_metrics.avg_annual_income)}\n            </MetricValue>\n          </MetricItem>\n        </MetricCategory>\n\n        {/* Account Metrics */}\n        <MetricCategory>\n          <CategoryTitle>🏦 Account Metrics</CategoryTitle>\n          <MetricItem>\n            <MetricLabel>Total Accounts</MetricLabel>\n            <MetricValue highlight>\n              {formatNumber(metrics.metrics.account_metrics.total_accounts)}\n            </MetricValue>\n          </MetricItem>\n          <MetricItem>\n            <MetricLabel>Total Balance</MetricLabel>\n            <MetricValue>\n              {formatCurrency(metrics.metrics.account_metrics.total_balance)}\n            </MetricValue>\n          </MetricItem>\n          <MetricItem>\n            <MetricLabel>Avg Account Balance</MetricLabel>\n            <MetricValue>\n              {formatCurrency(metrics.metrics.account_metrics.avg_account_balance)}\n            </MetricValue>\n          </MetricItem>\n          <MetricItem>\n            <MetricLabel>Negative Balance Rate</MetricLabel>\n            <MetricValue>\n              {formatPercentage(metrics.metrics.account_metrics.negative_balance_rate)}\n            </MetricValue>\n          </MetricItem>\n        </MetricCategory>\n\n        {/* Loan Metrics */}\n        <MetricCategory>\n          <CategoryTitle>💰 Loan Portfolio</CategoryTitle>\n          <MetricItem>\n            <MetricLabel>Total Loans</MetricLabel>\n            <MetricValue highlight>\n              {formatNumber(metrics.metrics.loan_metrics.total_loans)}\n            </MetricValue>\n          </MetricItem>\n          <MetricItem>\n            <MetricLabel>Total Portfolio Value</MetricLabel>\n            <MetricValue>\n              {formatCurrency(metrics.metrics.loan_metrics.total_loan_portfolio)}\n            </MetricValue>\n          </MetricItem>\n          <MetricItem>\n            <MetricLabel>Outstanding Balance</MetricLabel>\n            <MetricValue>\n              {formatCurrency(metrics.metrics.loan_metrics.total_outstanding)}\n            </MetricValue>\n          </MetricItem>\n          <MetricItem>\n            <MetricLabel>Default Rate</MetricLabel>\n            <MetricValue>\n              {formatPercentage(metrics.metrics.loan_metrics.default_rate)}\n            </MetricValue>\n          </MetricItem>\n          <MetricItem>\n            <MetricLabel>Avg Interest Rate</MetricLabel>\n            <MetricValue>\n              {formatPercentage(metrics.metrics.loan_metrics.avg_interest_rate)}\n            </MetricValue>\n          </MetricItem>\n        </MetricCategory>\n\n        {/* Transaction Metrics */}\n        <MetricCategory>\n          <CategoryTitle>💳 Transactions (30 days)</CategoryTitle>\n          <MetricItem>\n            <MetricLabel>Monthly Transaction Count</MetricLabel>\n            <MetricValue highlight>\n              {formatNumber(metrics.metrics.transaction_metrics.monthly_transaction_count)}\n            </MetricValue>\n          </MetricItem>\n          <MetricItem>\n            <MetricLabel>Monthly Volume</MetricLabel>\n            <MetricValue>\n              {formatCurrency(metrics.metrics.transaction_metrics.monthly_transaction_volume)}\n            </MetricValue>\n          </MetricItem>\n          <MetricItem>\n            <MetricLabel>Avg Transaction Amount</MetricLabel>\n            <MetricValue>\n              {formatCurrency(metrics.metrics.transaction_metrics.avg_transaction_amount)}\n            </MetricValue>\n          </MetricItem>\n        </MetricCategory>\n      </MetricsGrid>\n\n      <LastUpdated>\n        Last updated: {new Date(metrics.calculated_at).toLocaleString()}\n      </LastUpdated>\n    </DashboardContainer>\n  );\n};\n\nexport default BusinessMetricsDashboard;"],"mappings":"sXAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,gBAAgB,KAAiC,iCAAiC,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE5F,KAAM,CAAAC,kBAAkB,CAAGN,MAAM,CAACO,GAAG,CAAAC,eAAA,GAAAA,eAAA,CAAAC,sBAAA,yIAMpC,CAED,KAAM,CAAAC,cAAc,CAAGV,MAAM,CAACW,EAAE,CAAAC,gBAAA,GAAAA,gBAAA,CAAAH,sBAAA,kJAQ/B,CAED,KAAM,CAAAI,WAAW,CAAGb,MAAM,CAACO,GAAG,CAAAO,gBAAA,GAAAA,gBAAA,CAAAL,sBAAA,kIAK7B,CAED,KAAM,CAAAM,cAAc,CAAGf,MAAM,CAACO,GAAG,CAAAS,gBAAA,GAAAA,gBAAA,CAAAP,sBAAA,yGAKhC,CAED,KAAM,CAAAQ,aAAa,CAAGjB,MAAM,CAACkB,EAAE,CAAAC,gBAAA,GAAAA,gBAAA,CAAAV,sBAAA,oJAQ9B,CAED,KAAM,CAAAW,UAAU,CAAGpB,MAAM,CAACO,GAAG,CAAAc,gBAAA,GAAAA,gBAAA,CAAAZ,sBAAA,kMAU5B,CAED,KAAM,CAAAa,WAAW,CAAGtB,MAAM,CAACuB,IAAI,CAAAC,gBAAA,GAAAA,gBAAA,CAAAf,sBAAA,8CAG9B,CAED,KAAM,CAAAgB,WAAW,CAAGzB,MAAM,CAACuB,IAAI,CAAAG,gBAAA,GAAAA,gBAAA,CAAAjB,sBAAA,kEAGpBkB,KAAK,EAAIA,KAAK,CAACC,SAAS,CAAG,SAAS,CAAG,MAAM,CACvD,CAED,KAAM,CAAAC,aAAa,CAAG7B,MAAM,CAAC8B,MAAM,CAAAC,gBAAA,GAAAA,gBAAA,CAAAtB,sBAAA,yUAoBlC,CAED,KAAM,CAAAuB,cAAc,CAAGhC,MAAM,CAACO,GAAG,CAAA0B,gBAAA,GAAAA,gBAAA,CAAAxB,sBAAA,kHAMhC,CAED,KAAM,CAAAyB,YAAY,CAAGlC,MAAM,CAACO,GAAG,CAAA4B,gBAAA,GAAAA,gBAAA,CAAA1B,sBAAA,oJAO9B,CAED,KAAM,CAAA2B,WAAW,CAAGpC,MAAM,CAACO,GAAG,CAAA8B,iBAAA,GAAAA,iBAAA,CAAA5B,sBAAA,yFAK7B,CAED,KAAM,CAAA6B,wBAAkC,CAAGA,CAAA,GAAM,CAC/C,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAG1C,QAAQ,CAAiC,IAAI,CAAC,CAC5E,KAAM,CAAC2C,OAAO,CAAEC,UAAU,CAAC,CAAG5C,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAAC6C,KAAK,CAAEC,QAAQ,CAAC,CAAG9C,QAAQ,CAAgB,IAAI,CAAC,CAEvD,KAAM,CAAA+C,YAAY,CAAG,KAAAA,CAAA,GAAY,CAC/B,GAAI,CACFH,UAAU,CAAC,IAAI,CAAC,CAChBE,QAAQ,CAAC,IAAI,CAAC,CACd,KAAM,CAAAE,QAAQ,CAAG,KAAM,CAAA7C,gBAAgB,CAAC8C,kBAAkB,CAAC,CAAC,CAC5DP,UAAU,CAACM,QAAQ,CAAC,CACtB,CAAE,MAAOE,GAAG,CAAE,CACZJ,QAAQ,CAAC,iCAAiC,CAAC,CAC3CK,OAAO,CAACN,KAAK,CAAC,yBAAyB,CAAEK,GAAG,CAAC,CAC/C,CAAC,OAAS,CACRN,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAED3C,SAAS,CAAC,IAAM,CACd8C,YAAY,CAAC,CAAC,CAChB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAK,cAAc,CAAIC,KAAa,EAAK,CACxC,MAAO,IAAI,CAAAC,IAAI,CAACC,YAAY,CAAC,OAAO,CAAE,CACpCC,KAAK,CAAE,UAAU,CACjBC,QAAQ,CAAE,KAAK,CACfC,qBAAqB,CAAE,CAAC,CACxBC,qBAAqB,CAAE,CACzB,CAAC,CAAC,CAACC,MAAM,CAACP,KAAK,CAAC,CAClB,CAAC,CAED,KAAM,CAAAQ,YAAY,CAAG,QAAAA,CAACR,KAAa,CAA2B,IAAzB,CAAAS,QAAgB,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,CAAC,CACvD,MAAO,IAAI,CAAAT,IAAI,CAACC,YAAY,CAAC,OAAO,CAAE,CACpCG,qBAAqB,CAAEI,QAAQ,CAC/BH,qBAAqB,CAAEG,QACzB,CAAC,CAAC,CAACF,MAAM,CAACP,KAAK,CAAC,CAClB,CAAC,CAED,KAAM,CAAAa,gBAAgB,CAAIb,KAAa,EAAK,CAC1C,SAAAc,MAAA,CAAUd,KAAK,CAACe,OAAO,CAAC,CAAC,CAAC,MAC5B,CAAC,CAED,GAAIzB,OAAO,CAAE,CACX,mBACEtC,IAAA,CAACG,kBAAkB,EAAA6D,QAAA,cACjBhE,IAAA,CAAC6B,cAAc,EAAAmC,QAAA,cACbhE,IAAA,QAAAgE,QAAA,CAAK,0CAA8B,CAAK,CAAC,CAC3B,CAAC,CACC,CAAC,CAEzB,CAEA,GAAIxB,KAAK,CAAE,CACT,mBACEtC,KAAA,CAACC,kBAAkB,EAAA6D,QAAA,eACjBhE,IAAA,CAACO,cAAc,EAAAyD,QAAA,CAAC,yCAA6B,CAAgB,CAAC,cAC9DhE,IAAA,CAAC+B,YAAY,EAAAiC,QAAA,CAAExB,KAAK,CAAe,CAAC,cACpCxC,IAAA,CAAC0B,aAAa,EAACuC,OAAO,CAAEvB,YAAa,CAAAsB,QAAA,CAAC,oBAEtC,CAAe,CAAC,EACE,CAAC,CAEzB,CAEA,GAAI,CAAC5B,OAAO,CAAE,CACZ,MAAO,KAAI,CACb,CAEA,mBACElC,KAAA,CAACC,kBAAkB,EAAA6D,QAAA,eACjB9D,KAAA,QAAKiD,KAAK,CAAE,CAAEe,OAAO,CAAE,MAAM,CAAEC,cAAc,CAAE,eAAe,CAAEC,UAAU,CAAE,QAAQ,CAAEC,YAAY,CAAE,MAAO,CAAE,CAAAL,QAAA,eAC3GhE,IAAA,CAACO,cAAc,EAAAyD,QAAA,CAAC,yCAA6B,CAAgB,CAAC,cAC9DhE,IAAA,CAAC0B,aAAa,EAACuC,OAAO,CAAEvB,YAAa,CAAC4B,QAAQ,CAAEhC,OAAQ,CAAA0B,QAAA,CAAC,sBAEzD,CAAe,CAAC,EACb,CAAC,cAEN9D,KAAA,CAACQ,WAAW,EAAAsD,QAAA,eAEV9D,KAAA,CAACU,cAAc,EAAAoD,QAAA,eACbhE,IAAA,CAACc,aAAa,EAAAkD,QAAA,CAAC,+BAAmB,CAAe,CAAC,cAClD9D,KAAA,CAACe,UAAU,EAAA+C,QAAA,eACThE,IAAA,CAACmB,WAAW,EAAA6C,QAAA,CAAC,iBAAe,CAAa,CAAC,cAC1ChE,IAAA,CAACsB,WAAW,EAACG,SAAS,MAAAuC,QAAA,CACnBR,YAAY,CAACpB,OAAO,CAACA,OAAO,CAACmC,gBAAgB,CAACC,eAAe,CAAC,CACpD,CAAC,EACJ,CAAC,cACbtE,KAAA,CAACe,UAAU,EAAA+C,QAAA,eACThE,IAAA,CAACmB,WAAW,EAAA6C,QAAA,CAAC,uBAAqB,CAAa,CAAC,cAChDhE,IAAA,CAACsB,WAAW,EAAA0C,QAAA,CACTH,gBAAgB,CAACzB,OAAO,CAACA,OAAO,CAACmC,gBAAgB,CAACE,qBAAqB,CAAC,CAC9D,CAAC,EACJ,CAAC,cACbvE,KAAA,CAACe,UAAU,EAAA+C,QAAA,eACThE,IAAA,CAACmB,WAAW,EAAA6C,QAAA,CAAC,kBAAgB,CAAa,CAAC,cAC3ChE,IAAA,CAACsB,WAAW,EAAA0C,QAAA,CACTR,YAAY,CAACpB,OAAO,CAACA,OAAO,CAACmC,gBAAgB,CAACG,gBAAgB,CAAC,CACrD,CAAC,EACJ,CAAC,cACbxE,KAAA,CAACe,UAAU,EAAA+C,QAAA,eACThE,IAAA,CAACmB,WAAW,EAAA6C,QAAA,CAAC,mBAAiB,CAAa,CAAC,cAC5ChE,IAAA,CAACsB,WAAW,EAAA0C,QAAA,CACTjB,cAAc,CAACX,OAAO,CAACA,OAAO,CAACmC,gBAAgB,CAACI,iBAAiB,CAAC,CACxD,CAAC,EACJ,CAAC,EACC,CAAC,cAGjBzE,KAAA,CAACU,cAAc,EAAAoD,QAAA,eACbhE,IAAA,CAACc,aAAa,EAAAkD,QAAA,CAAC,8BAAkB,CAAe,CAAC,cACjD9D,KAAA,CAACe,UAAU,EAAA+C,QAAA,eACThE,IAAA,CAACmB,WAAW,EAAA6C,QAAA,CAAC,gBAAc,CAAa,CAAC,cACzChE,IAAA,CAACsB,WAAW,EAACG,SAAS,MAAAuC,QAAA,CACnBR,YAAY,CAACpB,OAAO,CAACA,OAAO,CAACwC,eAAe,CAACC,cAAc,CAAC,CAClD,CAAC,EACJ,CAAC,cACb3E,KAAA,CAACe,UAAU,EAAA+C,QAAA,eACThE,IAAA,CAACmB,WAAW,EAAA6C,QAAA,CAAC,eAAa,CAAa,CAAC,cACxChE,IAAA,CAACsB,WAAW,EAAA0C,QAAA,CACTjB,cAAc,CAACX,OAAO,CAACA,OAAO,CAACwC,eAAe,CAACE,aAAa,CAAC,CACnD,CAAC,EACJ,CAAC,cACb5E,KAAA,CAACe,UAAU,EAAA+C,QAAA,eACThE,IAAA,CAACmB,WAAW,EAAA6C,QAAA,CAAC,qBAAmB,CAAa,CAAC,cAC9ChE,IAAA,CAACsB,WAAW,EAAA0C,QAAA,CACTjB,cAAc,CAACX,OAAO,CAACA,OAAO,CAACwC,eAAe,CAACG,mBAAmB,CAAC,CACzD,CAAC,EACJ,CAAC,cACb7E,KAAA,CAACe,UAAU,EAAA+C,QAAA,eACThE,IAAA,CAACmB,WAAW,EAAA6C,QAAA,CAAC,uBAAqB,CAAa,CAAC,cAChDhE,IAAA,CAACsB,WAAW,EAAA0C,QAAA,CACTH,gBAAgB,CAACzB,OAAO,CAACA,OAAO,CAACwC,eAAe,CAACI,qBAAqB,CAAC,CAC7D,CAAC,EACJ,CAAC,EACC,CAAC,cAGjB9E,KAAA,CAACU,cAAc,EAAAoD,QAAA,eACbhE,IAAA,CAACc,aAAa,EAAAkD,QAAA,CAAC,6BAAiB,CAAe,CAAC,cAChD9D,KAAA,CAACe,UAAU,EAAA+C,QAAA,eACThE,IAAA,CAACmB,WAAW,EAAA6C,QAAA,CAAC,aAAW,CAAa,CAAC,cACtChE,IAAA,CAACsB,WAAW,EAACG,SAAS,MAAAuC,QAAA,CACnBR,YAAY,CAACpB,OAAO,CAACA,OAAO,CAAC6C,YAAY,CAACC,WAAW,CAAC,CAC5C,CAAC,EACJ,CAAC,cACbhF,KAAA,CAACe,UAAU,EAAA+C,QAAA,eACThE,IAAA,CAACmB,WAAW,EAAA6C,QAAA,CAAC,uBAAqB,CAAa,CAAC,cAChDhE,IAAA,CAACsB,WAAW,EAAA0C,QAAA,CACTjB,cAAc,CAACX,OAAO,CAACA,OAAO,CAAC6C,YAAY,CAACE,oBAAoB,CAAC,CACvD,CAAC,EACJ,CAAC,cACbjF,KAAA,CAACe,UAAU,EAAA+C,QAAA,eACThE,IAAA,CAACmB,WAAW,EAAA6C,QAAA,CAAC,qBAAmB,CAAa,CAAC,cAC9ChE,IAAA,CAACsB,WAAW,EAAA0C,QAAA,CACTjB,cAAc,CAACX,OAAO,CAACA,OAAO,CAAC6C,YAAY,CAACG,iBAAiB,CAAC,CACpD,CAAC,EACJ,CAAC,cACblF,KAAA,CAACe,UAAU,EAAA+C,QAAA,eACThE,IAAA,CAACmB,WAAW,EAAA6C,QAAA,CAAC,cAAY,CAAa,CAAC,cACvChE,IAAA,CAACsB,WAAW,EAAA0C,QAAA,CACTH,gBAAgB,CAACzB,OAAO,CAACA,OAAO,CAAC6C,YAAY,CAACI,YAAY,CAAC,CACjD,CAAC,EACJ,CAAC,cACbnF,KAAA,CAACe,UAAU,EAAA+C,QAAA,eACThE,IAAA,CAACmB,WAAW,EAAA6C,QAAA,CAAC,mBAAiB,CAAa,CAAC,cAC5ChE,IAAA,CAACsB,WAAW,EAAA0C,QAAA,CACTH,gBAAgB,CAACzB,OAAO,CAACA,OAAO,CAAC6C,YAAY,CAACK,iBAAiB,CAAC,CACtD,CAAC,EACJ,CAAC,EACC,CAAC,cAGjBpF,KAAA,CAACU,cAAc,EAAAoD,QAAA,eACbhE,IAAA,CAACc,aAAa,EAAAkD,QAAA,CAAC,qCAAyB,CAAe,CAAC,cACxD9D,KAAA,CAACe,UAAU,EAAA+C,QAAA,eACThE,IAAA,CAACmB,WAAW,EAAA6C,QAAA,CAAC,2BAAyB,CAAa,CAAC,cACpDhE,IAAA,CAACsB,WAAW,EAACG,SAAS,MAAAuC,QAAA,CACnBR,YAAY,CAACpB,OAAO,CAACA,OAAO,CAACmD,mBAAmB,CAACC,yBAAyB,CAAC,CACjE,CAAC,EACJ,CAAC,cACbtF,KAAA,CAACe,UAAU,EAAA+C,QAAA,eACThE,IAAA,CAACmB,WAAW,EAAA6C,QAAA,CAAC,gBAAc,CAAa,CAAC,cACzChE,IAAA,CAACsB,WAAW,EAAA0C,QAAA,CACTjB,cAAc,CAACX,OAAO,CAACA,OAAO,CAACmD,mBAAmB,CAACE,0BAA0B,CAAC,CACpE,CAAC,EACJ,CAAC,cACbvF,KAAA,CAACe,UAAU,EAAA+C,QAAA,eACThE,IAAA,CAACmB,WAAW,EAAA6C,QAAA,CAAC,wBAAsB,CAAa,CAAC,cACjDhE,IAAA,CAACsB,WAAW,EAAA0C,QAAA,CACTjB,cAAc,CAACX,OAAO,CAACA,OAAO,CAACmD,mBAAmB,CAACG,sBAAsB,CAAC,CAChE,CAAC,EACJ,CAAC,EACC,CAAC,EACN,CAAC,cAEdxF,KAAA,CAAC+B,WAAW,EAAA+B,QAAA,EAAC,gBACG,CAAC,GAAI,CAAA2B,IAAI,CAACvD,OAAO,CAACwD,aAAa,CAAC,CAACC,cAAc,CAAC,CAAC,EACpD,CAAC,EACI,CAAC,CAEzB,CAAC,CAED,cAAe,CAAA1D,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}