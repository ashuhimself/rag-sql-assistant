{"ast":null,"code":"import{useState,useCallback}from'react';import{v4 as uuidv4}from'uuid';import{chatAPI}from'../services/api';export const useChat=()=>{const[currentSession,setCurrentSession]=useState(null);const[messages,setMessages]=useState([]);const[isLoading,setIsLoading]=useState(false);const[error,setError]=useState(null);const sendMessage=useCallback(async content=>{if(!content.trim())return;setIsLoading(true);setError(null);// Add user message to UI immediately\nconst userMessage={id:Date.now(),message_type:'user',content:content.trim(),created_at:new Date().toISOString()};setMessages(prev=>[...prev,userMessage]);try{const request={message:content.trim(),session_id:(currentSession===null||currentSession===void 0?void 0:currentSession.session_id)||uuidv4()};const response=await chatAPI.sendMessage(request);if(response.success){// Update session if it's new\nif(!currentSession){const newSession={id:Date.now(),session_id:response.session_id,created_at:new Date().toISOString(),updated_at:new Date().toISOString(),messages:[]};setCurrentSession(newSession);}// Add assistant response\nsetMessages(prev=>[...prev,response.message]);}else{throw new Error(response.error||'Failed to send message');}}catch(err){const errorMessage=err instanceof Error?err.message:'An error occurred';setError(errorMessage);// Add error message to chat\nconst errorChatMessage={id:Date.now()+1,message_type:'system',content:\"Error: \".concat(errorMessage),created_at:new Date().toISOString()};setMessages(prev=>[...prev,errorChatMessage]);}finally{setIsLoading(false);}},[currentSession]);const loadSession=useCallback(async sessionId=>{setIsLoading(true);setError(null);try{const session=await chatAPI.getSession(sessionId);setCurrentSession(session);setMessages(session.messages);}catch(err){const errorMessage=err instanceof Error?err.message:'Failed to load session';setError(errorMessage);}finally{setIsLoading(false);}},[]);const startNewSession=useCallback(()=>{setCurrentSession(null);setMessages([]);setError(null);},[]);const clearError=useCallback(()=>{setError(null);},[]);return{currentSession,messages,isLoading,error,sendMessage,loadSession,startNewSession,clearError};};","map":{"version":3,"names":["useState","useCallback","v4","uuidv4","chatAPI","useChat","currentSession","setCurrentSession","messages","setMessages","isLoading","setIsLoading","error","setError","sendMessage","content","trim","userMessage","id","Date","now","message_type","created_at","toISOString","prev","request","message","session_id","response","success","newSession","updated_at","Error","err","errorMessage","errorChatMessage","concat","loadSession","sessionId","session","getSession","startNewSession","clearError"],"sources":["/Users/ashu/Desktop/warehouse-copilot/rag-sql-assistant/frontend/src/hooks/useChat.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { ChatMessage, ChatRequest, ChatSession } from '../types';\nimport { chatAPI } from '../services/api';\n\nexport const useChat = () => {\n  const [currentSession, setCurrentSession] = useState<ChatSession | null>(null);\n  const [messages, setMessages] = useState<ChatMessage[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  const sendMessage = useCallback(async (content: string) => {\n    if (!content.trim()) return;\n\n    setIsLoading(true);\n    setError(null);\n\n    // Add user message to UI immediately\n    const userMessage: ChatMessage = {\n      id: Date.now(),\n      message_type: 'user',\n      content: content.trim(),\n      created_at: new Date().toISOString(),\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n\n    try {\n      const request: ChatRequest = {\n        message: content.trim(),\n        session_id: currentSession?.session_id || uuidv4(),\n      };\n\n      const response = await chatAPI.sendMessage(request);\n\n      if (response.success) {\n        // Update session if it's new\n        if (!currentSession) {\n          const newSession: ChatSession = {\n            id: Date.now(),\n            session_id: response.session_id,\n            created_at: new Date().toISOString(),\n            updated_at: new Date().toISOString(),\n            messages: [],\n          };\n          setCurrentSession(newSession);\n        }\n\n        // Add assistant response\n        setMessages(prev => [...prev, response.message]);\n      } else {\n        throw new Error(response.error || 'Failed to send message');\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'An error occurred';\n      setError(errorMessage);\n\n      // Add error message to chat\n      const errorChatMessage: ChatMessage = {\n        id: Date.now() + 1,\n        message_type: 'system',\n        content: `Error: ${errorMessage}`,\n        created_at: new Date().toISOString(),\n      };\n      setMessages(prev => [...prev, errorChatMessage]);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [currentSession]);\n\n  const loadSession = useCallback(async (sessionId: string) => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const session = await chatAPI.getSession(sessionId);\n      setCurrentSession(session);\n      setMessages(session.messages);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Failed to load session';\n      setError(errorMessage);\n    } finally {\n      setIsLoading(false);\n    }\n  }, []);\n\n  const startNewSession = useCallback(() => {\n    setCurrentSession(null);\n    setMessages([]);\n    setError(null);\n  }, []);\n\n  const clearError = useCallback(() => {\n    setError(null);\n  }, []);\n\n  return {\n    currentSession,\n    messages,\n    isLoading,\n    error,\n    sendMessage,\n    loadSession,\n    startNewSession,\n    clearError,\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}